/*
 * The XML:DB Initiative Software License, Version 1.0
 *
 * Copyright (c) 2000-2024 The XML:DB Initiative. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification, are permitted
 * provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this list of conditions
 * and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice, this list of
 * conditions and the following disclaimer in the documentation and/or other materials provided with
 * the distribution.
 *
 * 3. The end-user documentation included with the redistribution, if any, must include the
 * following acknowledgment: "This product includes software developed by the XML:DB Initiative
 * (http://www.xmldb.org/)." Alternately, this acknowledgment may appear in the software itself, if
 * and wherever such third-party acknowledgments normally appear.
 *
 * 4. The name "XML:DB Initiative" must not be used to endorse or promote products derived from this
 * software without prior written permission. For written permission, please contact info@xmldb.org.
 *
 * 5. Products derived from this software may not be called "XML:DB", nor may "XML:DB" appear in
 * their name, without prior written permission of the XML:DB Initiative.
 *
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR ITS CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
 * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * =================================================================================================
 * This software consists of voluntary contributions made by many individuals on behalf of the
 * XML:DB Initiative. For more information on the XML:DB Initiative, please see
 * <https://github.com/xmldb-org/>
 */
import java.text.SimpleDateFormat

plugins {
  id 'eclipse'
  id 'java-library'
  id 'java-test-fixtures'
  id 'com.diffplug.spotless' version '6.25.0'
  id 'com.github.ben-manes.versions' version '0.51.0'
  id 'me.champeau.jmh' version '0.7.2'
  id 'org.kordamp.gradle.java-project' version '0.54.0'
}

apply {
  plugin 'org.kordamp.gradle.checkstyle'
  plugin 'org.kordamp.gradle.errorprone'
  plugin 'org.kordamp.gradle.sonar'
}

if (!project.hasProperty('sonatypeUsername')) ext.sonatypeUsername = '**undefined**'
if (!project.hasProperty('sonatypePassword')) ext.sonatypePassword = '**undefined**'
if (!project.hasProperty('sonarToken')) ext.sonarToken = '**undefined**'

group = 'net.sf.xmldb-org'

defaultTasks 'build'

java {
  sourceCompatibility = JavaVersion.VERSION_17
}

repositories {
  mavenCentral()
}

dependencies {
  testImplementation 'org.assertj:assertj-core:3.26.3'
  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.11.2'
  testImplementation 'org.junit.jupiter:junit-jupiter-params:5.11.1'
  testImplementation 'org.mockito:mockito-core:5.14.1'
  testImplementation 'org.mockito:mockito-junit-jupiter:5.14.1'
  testImplementation 'org.openjdk.jmh:jmh-core:1.37'

  testRuntimeOnly 'org.mockito:mockito-core:5.14.1'
  testRuntimeOnly 'org.junit.platform:junit-platform-runner:1.11.0'
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.11.1'
}

test {
  finalizedBy jacocoTestReport
}

compileJava {
  options.compilerArgs << '-Xlint:unchecked'
}

eclipse {
  classpath {
    testSourceSets =  [sourceSets.test, sourceSets.jmh]
  }
}

jar {
  manifest.attributes 'Implementation-Title': 'XML:DB API specification',
                      'Specification-Title': 'XML:DB API specification',
                      'Automatic-Module-Name': "org.xmldb.api"
}

jmh {
  jmhVersion = '1.34'
  humanOutputFile = null
  warmupIterations = 1
  iterations = 1
}

spotless {
  java {
    eclipse().configFile('gradle/xmldb-api-style.xml')
    importOrderFile('gradle/xmldb-api.importorder')
  }
}

test {
  useJUnitPlatform()
  testLogging {
    events 'skipped'
  }
}

dependencyUpdates.resolutionStrategy {
  componentSelection { rules ->
    rules.all { ComponentSelection selection ->
      boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm', 'pr', 'preview'].any { qualifier ->
        selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
      }
      if (rejected) {
        selection.reject('Release candidate')
      }
    }
  }
}

config {
  release = !project.version.toString().endsWith('-SNAPSHOT')
  info {
    vendor = 'reinhapa'
    name = 'XML:DB API specification'
    description = 'XML:DB Initiative for XML Databases'
    inceptionYear = '2000'
    links {
      website = 'https://github.com/xmldb-org/xmldb-api'
      issueTracker = 'https://github.com/xmldb-org/xmldb-api/issues'
      scm = 'https://github.com/xmldb-org/xmldb-api.git'
    }
    scm {
      connection = 'scm:git://github.com/xmldb-org/xmldb-api.git'
      developerConnection = 'scm:git://github.com/xmldb-org/xmldb-api.git'
      url = 'https://github.com/xmldb-org/xmldb-api'
    }
    organization {
      name = 'XML:DB Initiative for XML Databases'
      url = 'https://github.com/xmldb-org'
    }
    people {
      person {
        id = 'xmldb-api'
        name = 'XML:DB Initiative'
        roles = [ 'owner' ]
      }
      person {
        id = 'reinhapa'
        name = 'Patrick Reinhart'
        email = 'patrick@reini.net'
        roles = [ 'developer' ]
      }
      person {
        id = 'per_nyfelt'
        name = 'Per Nyfelt'
        email = 'per_nyfelt@users.sf.net'
        roles = [ 'developer' ]
      }
      person {
        id = 'walkabout'
        name = 'Lars Martin'
        email = 'walkabout@users.sf.net'
        roles = [ 'developer' ]
      }
    }
    repositories {
      repository {
        name = 'sonatypeRelease'
        url  = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
        credentials {
          username = sonatypeUsername
          password = sonatypePassword
        }
      }
      repository {
        name = 'sonatypeSnapshot'
        url  = 'https://oss.sonatype.org/content/repositories/snapshots/'
        credentials {
          username = sonatypeUsername
          password = sonatypePassword
        }
      }
    }
  }
  quality {
    errorprone {
      enabled = JavaVersion.current() != JavaVersion.VERSION_1_8
      errorProneVersion = '2.11.0'
    }
    sonar {
      hostUrl = 'https://sonarcloud.io'
      login = sonarToken
      organization = 'xmldb-org'
      projectKey = 'xmldb-org_xmldb-api'
    }
  }
  licensing {
    licenses {
      license {
        name = 'The XML:DB Initiative Software License'
        url = 'https://github.com/xmldb-org/xmldb-api/raw/master/LICENSE'
      }
    }
  }
  docs {
    javadoc {
      autoLinks.enabled = false
      options {
        docTitle = "XML:DB ${project.version} API"
        header = "XML:DB ${project.version} API"
        windowTitle = "XML:DB ${project.version} API"
      }
    }
  }
  artifacts {
    minpom.enabled = false
  }
  publishing {
    signing.enabled = release
    releasesRepository  = 'sonatypeRelease'
    snapshotsRepository = 'sonatypeSnapshot'
  }
}

normalization {
  runtimeClasspath {
    ignore('/META-INF/MANIFEST.MF')
  }
}
