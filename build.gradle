import java.text.SimpleDateFormat

plugins {
  id 'java-library'
  id 'com.github.ben-manes.versions' version '0.41.0'
  id "me.champeau.gradle.jmh" version "0.5.3"
  id 'org.kordamp.gradle.java-project' version '0.47.0'
}

if (!project.hasProperty('sonatypeUsername')) ext.sonatypeUsername = '**undefined**'
if (!project.hasProperty('sonatypePassword')) ext.sonatypePassword = '**undefined**'

group = 'net.sf.xmldb-org'
version = '2.0.0-SNAPSHOT'

defaultTasks 'build'

java {
  sourceCompatibility = JavaVersion.VERSION_1_8
  targetCompatibility = JavaVersion.VERSION_1_8
}

repositories {
  mavenCentral()
}

dependencies {
  testImplementation 'org.hamcrest:hamcrest:2.2'
  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
  testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.2'
  testImplementation 'org.mockito:mockito-core:4.2.0'
  testImplementation 'org.mockito:mockito-junit-jupiter:4.2.0'
  testImplementation 'org.openjdk.jmh:jmh-core:1.34'

  testRuntimeOnly 'org.mockito:mockito-core:4.2.0'
  testRuntimeOnly 'org.junit.platform:junit-platform-runner:1.8.2'
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
}

compileJava {
  options.compilerArgs << '-Xlint:unchecked'
}

signing {
  required { project.hasProperty('signing.password') && !project.version.endsWith('-SNAPSHOT') }
  sign publishing.publications
}

jar {
  manifest.attributes 'Implementation-Title': 'XML:DB API specification',
                      'Implementation-Version': project.version,
                      'Automatic-Module-Name': "org.xmldb.api"
}

jmh {
  humanOutputFile = null
  warmupIterations = 1
  iterations = 1
}

test {
  useJUnitPlatform()
  testLogging {
    events 'skipped'
  }
}

dependencyUpdates.resolutionStrategy {
  componentSelection { rules ->
    rules.all { ComponentSelection selection ->
      boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm', 'pr', 'preview'].any { qualifier ->
        selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
      }
      if (rejected) {
        selection.reject('Release candidate')
      }
    }
  }
}

config {
  release = !project.version.endsWith('-SNAPSHOT')
  info {
    vendor = 'reinhapa'
    name = 'XML:DB API specification'
    description = 'XML:DB Initiative for XML Databases'
    inceptionYear = '2000'
    links {
      website = 'https://github.com/xmldb-org/xmldb-api'
      issueTracker = 'https://github.com/xmldb-org/xmldb-api/issues'
      scm = 'https://github.com/xmldb-org/xmldb-api.git'
    }
    scm {
      connection = 'scm:git://github.com/xmldb-org/xmldb-api.git'
      developerConnection = 'scm:git://github.com/xmldb-org/xmldb-api.git'
      url = 'https://github.com/xmldb-org/xmldb-api'
    }
    people {
      person {
        id = 'reinhapa'
        name = 'Patrick Reinhart'
        email = 'patrick@reini.net'
        roles = [ 'developer' ]
      }
      person {
        id = 'per_nyfelt'
        name = 'Per Nyfelt'
        email = 'per_nyfelt@users.sf.net'
        roles = [ 'developer' ]
      }
      person {
        id = 'walkabout'
        name = 'Lars Martin'
        email = 'walkabout@users.sf.net'
        roles = [ 'developer' ]
      }
    }
    repositories {
      repository {
        name = 'sonatypeRelease'
        url  = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
        credentials {
          username = sonatypeUsername
          password = sonatypePassword
        }
      }
      repository {
        name = 'sonatypeSnapshot'
        url  = 'https://oss.sonatype.org/content/repositories/snapshots/'
        credentials {
          username = sonatypeUsername
          password = sonatypePassword
        }
      }
    }
  }
  licensing {
    licenses {
      license {
        name = 'The XML:DB Initiative Software License'
        url = 'https://github.com/xmldb-org/xmldb-api/raw/master/LICENSE'
      }
    }
  }
  docs {
    javadoc.autoLinks.enabled = false
  }
  artifacts {
    minpom.enabled = false
  }
  publishing {
    signing.enabled = release
    releasesRepository  = 'sonatypeRelease'
    snapshotsRepository = 'sonatypeSnapshot'
  }
}

normalization {
  runtimeClasspath {
    ignore('/META-INF/MANIFEST.MF')
  }
}
